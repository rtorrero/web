name: CI

on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:
  repository_dispatch:
    types: [start-ci, deploy-demo]

env:
  ELIXIR_VERSION: 1.15.7
  OTP_VERSION: 26
  MIX_ENV: test
  NODE_VERSION: "16"

jobs:
  obs-commit-rpm:
    name: Commit to OBS to generate RPM package
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    container:
      image: ghcr.io/trento-project/continuous-delivery:main
      env:
        OBS_USER: ${{ secrets.OBS_USER }}
        OBS_PASS: ${{ secrets.OBS_PASS }}
        OBS_PROJECT: ${{ secrets.OBS_PROJECT }}
        OSC_CHECKOUT_DIR: /tmp/trento-web-package
        REPOSITORY: ${{ github.repository }}
        FOLDER: packaging/suse/rpm
      options: -u 0:0
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}    
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Configure OSC
        run: |
          mkdir -p $HOME/.config/osc
          cp /home/osc/.config/osc/oscrc $HOME/.config/osc
          /scripts/init_osc_creds.sh
      - name: Prepare _service file
        run: |
          git config --global --add safe.directory /__w/web/web
          VERSION=$(./hack/get_version_from_git.sh)
          sed -i 's~%%REVISION%%~${{ github.sha }}~' $FOLDER/_service && \
          sed -i 's~%%REPOSITORY%%~'"${REPOSITORY}"'~' $FOLDER/_service && \
          sed -i 's~%%VERSION%%~'"${VERSION}"'~' $FOLDER/_service
      - name: Get mix deps & prepare tarball
        run: |
         mix local.hex --force && mix deps.clean --all && mix deps.get
         tar -c deps | gzip -n > deps.tar.gz
      - name: Checkout and prepare OBS package
        run: |
          osc checkout $OBS_PROJECT trento-web -o $OSC_CHECKOUT_DIR
          cp $FOLDER/_service $OSC_CHECKOUT_DIR
          cp $FOLDER/trento-web.spec $OSC_CHECKOUT_DIR
          rm -vf $OSC_CHECKOUT_DIR/*.tar.gz
          pushd $OSC_CHECKOUT_DIR 
          osc service manualrun
          rm -vf $OSC_CHECKOUT_DIR/*.tgz
          cp  /__w/web/web/deps.tar.gz .
      - name: Prepare trento-web.changes file
        # The .changes file is updated only in release creation. This current task should be improved
        # in order to add the current rolling release notes
        if: github.event_name == 'release'
        run: |
          git config --global --add safe.directory /__w/web/web
          VERSION=$(./hack/get_version_from_git.sh)
          TAG=$(echo $VERSION | cut -f1 -d+)
          hack/gh_release_to_obs_changeset.py $REPOSITORY -a shap-staff@suse.de -t $TAG -f $OSC_CHECKOUT_DIR/trento-web.changes
      - name: Commit changes into OBS
        run: |
          pushd $OSC_CHECKOUT_DIR
          osc ar
          osc commit -m "GitHub Actions automated update to reference ${{ github.sha }}"